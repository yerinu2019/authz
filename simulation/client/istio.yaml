apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: outbound-mtls
  namespace: clientns
spec:
  host: "api.example.com"
  exportTo:
  - "."
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: api1-outbound-mtls
  namespace: clientns
spec:
  host: "api1.api-istio.svc.cluster.local"
  exportTo:
    - "."
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: api2-outbound-mtls
  namespace: clientns
spec:
  host: "api2.api-istio.svc.cluster.local"
  exportTo:
    - "."
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: api
  namespace: clientns
spec:
  hosts:
    - api.example.com
  location: MESH_INTERNAL
  addresses:
    - 10.110.12.8
  resolution: DNS
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: client-gateway
  namespace: clientns
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
      - client1.example.com
      - client2.example.com
      - client1.clientns.svc.cluster.local
      - client2.clientns.svc.cluster.local

---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: client1
  namespace: clientns
spec:
  hosts:
  - client1.example.com
  gateways:
  - client-gateway
  http:
  - name: "client1 route"
    match:
    - uri:
        prefix: /client1
    route:
    - destination:
        host: client1
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: client2
  namespace: clientns
spec:
  hosts:
  - client2.example.com
  gateways:
  - client-gateway
  http:
  - name: "client2 route"
    match:
    - uri:
        prefix: /client2
    route:
    - destination:
        host: client2
