############################################################
# Example configuration to bootstrap OPA-Istio sidecars.
############################################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: opa-istio-config
data:
  config.yaml: |
    plugins:
      envoy_ext_authz_grpc:
        addr: :9191
        path: istio/authz/allow
    decision_logs:
      console: true
---
############################################################
# Example policy to enforce into OPA-Istio sidecars.
############################################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: opa-policy
data:
  policy.rego: |
    package istio.authz

    import input.attributes.request.http as http_request
    import input.parsed_path

    default allow = false

    # Allow health-checks
    allow {
        split(http_request.host, ":")[1] == "8282"
    }
    allow {
        split(http_request.host, ":")[1] == "15021"
    }
    allow {
        parsed_path[0] == "health"
        http_request.method == "GET"
    }
    allow {
        parsed_path[0] == "healthz"
        http_request.method == "GET"
    }

    allow = response {
        response := {
          "allowed": checkXfcc,
          "body": "Hello World!!!",
        }
    }

    deny = response {	    
        response := {
        "allowed": checkXfcc,
        "body": "Hello World!!!",
        }
    }

    checkXfcc {
      contains(input.attributes.request.http.headers["x-forwarded-client-cert"], api_whitelist[_])
    }

    api_whitelist = ["spiffe://cluster.local/ns/clientns/sa/client1",
      "spiffe://cluster.local/ns/clientns/sa/client3",
    ]
